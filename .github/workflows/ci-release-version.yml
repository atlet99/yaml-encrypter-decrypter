name: Update Release Version

on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: write
  actions: write

jobs:
  update-release-version:
    name: Update .release-version for Release or Pre-Release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Save list of commits
        id: save_commits
        run: |
          git log --pretty=format:"- %s (%h)" > commit_log.txt
        continue-on-error: true

      - name: Upload commit log
        uses: actions/upload-artifact@v3
        with:
          name: commit_log
          path: commit_log.txt

      - name: Determine next tag
        run: |
          latest_tag=$(cat .release-version 2>/dev/null || echo "v0.0.0")
          IFS='.' read -r major minor patch build <<< "${latest_tag#v}"
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            patch=$((patch + 1))
            new_tag="v$major.$minor.$patch"
          elif [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            build=${build:-0}
            build=$((build + 1))
            new_tag="v$major.$minor.$patch-$build-dev"
          fi
          echo "$new_tag" > .release-version
    
      - name: Commit and push .release-version
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add .release-version
          git commit -m "Update .release-version with version and build ID"
          git push origin HEAD:${{ github.ref_name }}

      - name: Trigger Release Workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/ci.yml/dispatches \
            -d '{"ref":"${{ github.ref_name }}"}'