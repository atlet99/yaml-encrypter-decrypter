name: ci-builds-and-releases

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2.10.2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get short SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV

      - name: Get repo name
        id: repo_vars
        run: echo "GH_REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: >
            ${{ secrets.DOCKER_USERNAME }}/${{ env.GH_REPO_NAME }}:${{ env.SHORT_SHA }},
            ${{ secrets.DOCKER_USERNAME }}/${{ env.GH_REPO_NAME }}:latest,
            ${{ secrets.DOCKER_USERNAME }}/${{ env.GH_REPO_NAME }}:${{ env.TAG_NAME }}
          push: true
          platforms: ${{ matrix.platform }}
          labels: ${{ github.repository }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download commit log
        uses: actions/download-artifact@v3
        with:
          name: commit_log

      - name: Read .release-version for Version variable
        run: |
          TAG_NAME=$(cat .release-version)
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Build Linux binary
        run: |
          GOOS=linux GOARCH=amd64 go build -ldflags "-X main.Version=${{ env.TAG_NAME }}" -o yed.linux ./cmd/yaml-encrypter-decrypter

      - name: Build macOS binary
        run: |
          GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.Version=${{ env.TAG_NAME }}" -o yed.darwin ./cmd/yaml-encrypter-decrypter

      - name: Build Windows binary
        run: |
          GOOS=windows GOARCH=amd64 go build -ldflags "-X main.Version=${{ env.TAG_NAME }}" -o yed.exe ./cmd/yaml-encrypter-decrypter

      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v2.1.0
        with:
          body_path: commit_log.txt
          tag_name: ${{ env.TAG_NAME }}
          prerelease: ${{ github.ref == 'refs/heads/dev' }}
          files: |
            yed.linux
            yed.darwin
            yed.exe