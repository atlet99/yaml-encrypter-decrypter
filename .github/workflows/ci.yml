name: ci-builds-and-releases

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

# Define minimal read-only permissions for the entire workflow
permissions:
  contents: read

jobs:  
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Log in to DockerHub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get short SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV

      - name: Get repo name
        id: repo_vars
        run: echo "GH_REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV
        
      - name: Read release version
        id: version_file
        run: |
          TAG_NAME=$(head -n 1 .release-version 2>/dev/null || echo "v0.0.0")
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          VERSION_RAW=$(tail -n 1 .release-version 2>/dev/null || echo "dev")
          echo "VERSION_RAW=$VERSION_RAW" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          context: .
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.GH_REPO_NAME }}:${{ env.SHORT_SHA }}
            ${{ secrets.DOCKER_USERNAME }}/${{ env.GH_REPO_NAME }}:${{ env.TAG_NAME }}
            ${{ secrets.DOCKER_USERNAME }}/${{ env.GH_REPO_NAME }}:latest
          push: true
          platforms: 'linux/amd64,linux/arm64'
          labels: |
            org.opencontainers.image.version=${{ env.VERSION_RAW }}
            org.opencontainers.image.source=${{ github.repository }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Read .release-version for Version variable
        id: version_file
        run: |
          TAG_NAME=$(head -n 1 .release-version 2>/dev/null || echo "v0.0.0")
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          VERSION_RAW=$(tail -n 1 .release-version 2>/dev/null || echo "dev")
          echo "VERSION_RAW=$VERSION_RAW" >> $GITHUB_ENV

      - name: Get Go Version
        run: |
          GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
          echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.4.0
        with:
          go-version: ${{ env.GOVERSION }}

      - name: Get last 4 commits
        id: last_commits
        run: |
          printf "Changelogs:\n" > last_commits.txt
          git fetch --prune --unshallow || git fetch --depth=100
          git log -4 --pretty=format:"- %s (%h)" >> last_commits.txt

      - name: Build Linux binary
        run: |
          GOOS=linux GOARCH=amd64 go build -ldflags "-X 'main.Version=${{ env.VERSION_RAW }}'" -o yed.linux ./cmd/yaml-encrypter-decrypter

      - name: Build macOS binary
        run: |
          GOOS=darwin GOARCH=arm64 go build -ldflags "-X 'main.Version=${{ env.VERSION_RAW }}'" -o yed.darwin ./cmd/yaml-encrypter-decrypter

      - name: Build Windows binary
        run: |
          GOOS=windows GOARCH=amd64 go build -ldflags "-X 'main.Version=${{ env.VERSION_RAW }}'" -o yed.exe ./cmd/yaml-encrypter-decrypter

      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          body_path: last_commits.txt
          tag_name: ${{ env.TAG_NAME }}
          files: |
            yed.linux
            yed.darwin
            yed.exe
        env:
          GITHUB_TOKEN: ${{ secrets.CONTENT_RELEASE }}
