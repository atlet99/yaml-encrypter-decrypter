name: ci-security-scanner-checks

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read

jobs:
  trivy_scan:
    name: trivy-scans
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@df409f7d9260372bd5f19e5b04e83cb3c43714ae # v3.27.9
        with:
          sarif_file: 'trivy-results.sarif'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  nancy_check:
    name: nancy-check
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
        
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Get Go Version
        run: |
          #!/bin/bash
          GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
          echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV
      - name: Setup Go
        uses: actions/setup-go@v5.1.0
        with:
          go-version: ${{ env.GOVERSION }}
      - name: WriteGoList
        run: go list -json -m all > go.list
      - name: Nancy
        uses: sonatype-nexus-community/nancy-github-action@395e2fb168f674f96502e5652103d112899ea369 # main
        with:
          nancyVersion: "v1.0.48"
          nancyCommand: sleuth --loud  
  ossf_scan:
    name: openssf-scorecard
    runs-on: ubuntu-20.04
    permissions:
      security-events: write
      id-token: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit
        
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Run analysis
        uses: ossf/scorecard-action@dde01de2fdfb29acf692f25ffb46c10a6655057e # main
        with:
          results_file: 'ossf-results.sarif'
          results_format: sarif
          publish_results: true
      - name: Upload artifact
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # main
        with:
          name: 'OSSF Sarif file'
          path: 'ossf-results.sarif'
          retention-days: 5
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@df409f7d9260372bd5f19e5b04e83cb3c43714ae # v3.27.9
        with:
          sarif_file: 'ossf-results.sarif'