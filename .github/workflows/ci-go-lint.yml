name: ci-go-lint

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read

jobs:
  go_lint:
    permissions:
      contents: read  # for actions/checkout to fetch code
      pull-requests: read  # for golangci/golangci-lint-action to fetch pull requests
    if: github.event.pull_request.draft == false || github.event_name == 'push'
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        
      - name: Get Go Version
        shell: bash
        run: |
          #!/bin/bash
          GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
          echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV
          
      - name: Setup Go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version: ${{ env.GOVERSION }}
      - name: Go Cache (Linux)
        uses: actions/cache@v4.2.2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GOVERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GOVERSION }}-
            ${{ runner.os }}-go-
      - name: golang-lint
        env:
          GOGC: 10
        uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8 # v6.1.1
        with:
          version: latest
          only-new-issues: true
          args: --timeout=10m
      - name: Run Staticcheck
        uses: dominikh/staticcheck-action@v1.3.0
        with:
          version: "latest"  # Using the latest stable version
          install-go: false # Use the Go version we already set up
          cache-key: ${{ runner.os }}-${{ env.GOVERSION }}
